services:
  web-app:
    build: 
      context: ./web-app
      dockerfile: Dockerfile.env
    ports:
      - "3000:8080"
    develop:
      watch:
        - action: sync
          path: ./web-app/src
          target: ./app/src
        - action: rebuild
          target: ./app/.env
          path: 
            ./web-app/.env
        - action: rebuild
          path: 
            ./web-app/package.json
            ./web-app/tsconfig.json
    env_file: ./web-app/.env
  web-backend:
    build: ./web-backend
    ports:
      - "3001:8080"
    volumes:
      - type: bind
        source: ./web-backend/key.json
        target: /app/key.json
        read_only: true
    develop:
      watch:
        - action: sync+restart 
          path: ./web-backend/src
          target:  ./app/src
        - action: rebuild
          path: ./web-backend/requirements.txt
        - action: sync+restart
          target: ./app/.env
          path: 
            ./web-backend/.env
    env_file: ./web-backend/.env
  gen-ai-sandbox:
    build: 
      context: ./gen-ai-sandbox/src/chatbot_app
      dockerfile: Dockerfile
    profiles: ["full"]
    ports:
      - "3002:8080"
    volumes:
      - type: bind
        source: ./gen-ai-sandbox/key-gen.json
        target: /app/chatbot/key-gen.json
        read_only: true
    develop:
      watch:
        - action: sync+restart
          path: ./gen-ai-sandbox/src/chatbot
          target: /app/chatbot
        - action: rebuild
          path: ./gen-ai-sandbox/api_requirements.txt
        - action: sync+restart
          target: ./app/.env
          path: 
            ./gen-ai-sandbox/.env
    env_file: ./gen-ai-sandbox/.env