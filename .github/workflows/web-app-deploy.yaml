
name: Web App build and deploy to Cloud Run

on:
  push:
    branches: [ "main" ]
    paths:
      - web-app/**
env:
  PROJECT_ID: bd-genai-internal 
  GAR_LOCATION: us-central1
  SERVICE: concierge-web-app 
  REGION: us-central1
  CLOUD_RUN_SA: gen-ai-webapp-cloud-run@bd-genai-internal.iam.gserviceaccount.com
  DOCKERFILE: Dockerfile

jobs:
  deploy:
    # Add 'id-token' with the intended permissions for workload identity federation
    permissions:
      contents: 'read'
      id-token: 'write'
    defaults:
      run:
        working-directory: ./web-app
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Google Auth
        id: auth
        uses: 'google-github-actions/auth@v0'
        with:
          token_format: 'access_token'
          workload_identity_provider: '${{ secrets.WIF_PROVIDER }}' # e.g. - projects/123456789/locations/global/workloadIdentityPools/my-pool/providers/my-provider
          service_account: '${{ secrets.WIF_SERVICE_ACCOUNT }}' # e.g. - my-service-account@my-project.iam.gserviceaccount.com

      # Authenticate Docker to Google Cloud Artifact Registry
      - name: Docker Auth
        id: docker-auth
        uses: 'docker/login-action@v1'
        with:
          username: 'oauth2accesstoken'
          password: '${{ steps.auth.outputs.access_token }}'
          registry: '${{ env.GAR_LOCATION }}-docker.pkg.dev'

      - name: Build and Push Container
        run: |-
          docker build -t "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE }}/${{ env.SERVICE }}:${{ github.sha }}"  --file ${{ env.DOCKERFILE }} .
          docker push "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE }}/${{ env.SERVICE }}:${{ github.sha }}"

      # END - Docker auth and build

      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v2 # https://github.com/google-github-actions/deploy-cloudrun
        with:
          service: ${{ env.SERVICE }}
          project_id: ${{ env.PROJECT_ID }}
          region: ${{ env.REGION }}
          # NOTE: If using a pre-built image, update the image name here
          image: ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE }}/${{ env.SERVICE }}:${{ github.sha }}
          env_vars: |-
            TEST_VAR1=test_variable1
            TEST_VAR2=" this will retain leading and trailing spaces "
            REACT_APP_API_BASE_URL=/api
          env_vars_update_strategy: overwrite
          secrets: |-
            TEST_SECRET1=TEST_SECRET1:latest
          flags: '--ingress=internal-and-cloud-load-balancing --max-instances=10 --min-instances=1 --concurrency=10 --service-account=${{ env.CLOUD_RUN_SA }}'

      # If required, use the Cloud Run url output in later steps
      - name: Show Output
        run: echo ${{ steps.deploy.outputs.url }}
