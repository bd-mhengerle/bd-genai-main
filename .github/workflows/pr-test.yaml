name: Test PR
env: 
  CI: false
on:
  pull_request:

jobs:
  # JOB to run change detection
  changes:
    runs-on: ubuntu-latest
    # Required permissions
    permissions:
      pull-requests: read
    # Set job outputs to values from filter step
    outputs:
      webapp: ${{ steps.filter.outputs.webapp }}
      webbackend: ${{ steps.filter.outputs.webbackend }}
      genai: ${{ steps.filter.outputs.genai }}
    steps:
    # For pull requests it's not necessary to checkout the code
    - uses: dorny/paths-filter@v3
      id: filter
      with:
        filters: |
          webapp:
            - 'web-app/**'
          webbackend:
            - 'web-backend/**'
          genai:
            - 'gen-ai-sandbox/**'

  test-webapp:
    name: Web App Test
    needs: changes
    if: ${{ needs.changes.outputs.webapp == 'true' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./web-app
    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js 22.x
      uses: actions/setup-node@v3
      with:
        node-version: 22.x
    - name: Build
      run: |
        npm install
        npm run test
        npm run build

  test-genai-sandbox:
    name: Genai Sandbox Test
    needs: changes
    if: ${{ needs.changes.outputs.genai == 'true' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./gen-ai-sandbox/src/chatbot_app
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.9
      uses: actions/setup-python@v3
      with:
        python-version: 3.9
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pylint
        pip install pytest
        pip install -r requirements.txt
   # - name: Analysing the code with pylint
   #   run: |
   #     pylint $(git ls-files '*.py')
    - name: Run Tests #TODO: Update to corresponding python command
      run: |
        pytest 

  test-web-backend:
    name: Web Backend Test
    needs: changes
    if: ${{ needs.changes.outputs.webbackend == 'true' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./web-backend
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.9
      uses: actions/setup-python@v3
      with:
        python-version: 3.9
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest
        pip install pylint
        pip install -r requirements.txt
  #  - name: Analysing the code with pylint
  #    run: |
  #      pylint $(git ls-files '*.py')
    - name: Run Tests #TODO: Update to corresponding python command
      run: |
        pytest